{"version":3,"file":"static/js/590.2398342d.chunk.js","mappings":"mHAEMA,E,MAAMC,GAAAA,OAAa,CACvBC,QAAiD,0BACjDC,QAAS,OAGX,K,gKCuFA,EAxFoB,WAClB,IAAMC,GAAWC,EAAAA,EAAAA,MAETC,GAASC,EAAAA,EAAAA,KAAe,SAACC,GAAD,OAAWA,EAAMF,IAAjB,IAAxBA,KACAG,EAA0CH,EAA1CG,SAAUC,EAAgCJ,EAAhCI,QAASC,EAAuBL,EAAvBK,QAASC,EAAcN,EAAdM,UAMpC,GAAsCC,EAAAA,EAAAA,UAAwB,IAA9D,eAAOC,EAAP,KAAoBC,EAApB,KAEMC,EAAS,yCAAG,2GACEhB,EAAAA,EAAAA,KAAS,SAAU,CACnCS,SAAAA,EACAC,QAAAA,EACAC,QAAAA,EACAC,UAAAA,IALc,OACVK,EADU,OAOVC,EAAOD,EAAIC,KAAKC,KAAI,SAACC,GAEzB,MAAO,CAAEC,GADSC,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAG,GAClCC,MAAON,EAChC,IAEDL,EAAeG,GAZC,2CAAH,sDAefS,EAAAA,EAAAA,YAAU,WACRX,GACD,GAAE,IAEH,IAAMY,EAAoB,yCAAG,WAAOC,GAAP,2FACrBR,EAAKQ,EAAEC,cAAcT,GADA,SAETrB,EAAAA,EAAAA,KAAS,SAAU,CACnCS,SAAU,EACVC,QAAAA,EACAC,QAAAA,EACAC,UAAAA,IANyB,OAErBK,EAFqB,OAQrBc,EAAUjB,EAAYkB,QACtBC,EAAMnB,EAAYoB,WAAU,SAACd,GAAD,OAAOA,EAAEC,KAAOA,CAAhB,IAC5Bc,EAAU,CACdd,GAAAA,EACAK,MAAOT,EAAIC,KAAK,IAElBa,EAAQK,OAAOH,EAAK,EAAGE,GACvBpB,EAAegB,GAfY,2CAAH,sDAkB1B,OACE,iBAAKM,UAAU,wBAAf,WACE,gBAAKA,UAAU,YAAf,UACE,iDAGF,gBAAKA,UAAU,cAAf,SACGvB,EAAYK,KAAI,SAACC,EAAGa,GAAJ,OACf,iBAAKI,UAAU,WAAsBhB,GAAID,EAAEC,GAA3C,WAEE,iBAAKgB,UAAU,gBAAf,UACGJ,EAAM,EADT,KACY,iBAAMI,UAAU,8BAI5B,iBAAKA,UAAU,6BAAf,WACE,iBAAMA,UAAU,6BAAhB,SAA8CjB,EAAEM,MAAM,MACtD,iBAAMW,UAAU,6BAAhB,SAA8CjB,EAAEM,MAAM,MACtD,iBAAMW,UAAU,+BAAhB,SAAgDjB,EAAEM,MAAM,MACxD,iBAAMW,UAAU,8BAAhB,SAA+CjB,EAAEM,MAAM,MACvD,iBAAMW,UAAU,8BAAhB,SAA+CjB,EAAEM,MAAM,MACvD,iBAAMW,UAAU,6BAAhB,SAA8CjB,EAAEM,MAAM,SAIxD,gBAAKL,GAAID,EAAEC,GAAIiB,QAASV,EAAxB,UACE,SAAC,MAAD,CAAWW,KAAM,SAlBUnB,EAAEC,GADlB,OAyBnB,gBAAKgB,UAAU,mBAAmBC,QAAS,kBAAMlC,GAAU,EAAhB,EAA3C,oBAKL,C","sources":["utils/api.ts","views/ResultLotto/index.tsx"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.NODE_ENV === 'production' ? 'https://api.gagakor.xyz' : 'http://localhost:8080',\r\n  timeout: 3600,\r\n});\r\n\r\nexport default api;\r\n","import './styles.scss';\r\nimport { BiRefresh } from 'react-icons/bi';\r\nimport api from '../../utils/api';\r\nimport { useAppSelector } from '../../store/config';\r\nimport { MouseEvent, useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nconst ResultLotto = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const { game } = useAppSelector((state) => state.game);\r\n  const { playGame, include, exclude, deviation } = game;\r\n\r\n  type ResultLotto = {\r\n    id: string;\r\n    value: number[];\r\n  };\r\n  const [resultLotto, setResultLotto] = useState<ResultLotto[]>([]);\r\n\r\n  const fetchData = async () => {\r\n    const res = await api.post('/lotto', {\r\n      playGame,\r\n      include,\r\n      exclude,\r\n      deviation,\r\n    });\r\n    const data = res.data.map((v: number[]) => {\r\n      const randomStr = Math.random().toString(36).substring(2, 6);\r\n      return { id: randomStr, value: v };\r\n    });\r\n\r\n    setResultLotto(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleOnclickRefresh = async (e: MouseEvent<HTMLElement>) => {\r\n    const id = e.currentTarget.id;\r\n    const res = await api.post('/lotto', {\r\n      playGame: 1,\r\n      include,\r\n      exclude,\r\n      deviation,\r\n    });\r\n    const refresh = resultLotto.slice();\r\n    const idx = resultLotto.findIndex((v) => v.id === id);\r\n    const newData = {\r\n      id,\r\n      value: res.data[0],\r\n    };\r\n    refresh.splice(idx, 1, newData);\r\n    setResultLotto(refresh);\r\n  };\r\n\r\n  return (\r\n    <div className=\"resultLotto-container\">\r\n      <div className=\"win-title\">\r\n        <p>Recommended Number</p>\r\n      </div>\r\n\r\n      <div className=\"win-section\">\r\n        {resultLotto.map((v, idx) => (\r\n          <div className=\"win-list\" key={v.id} id={v.id}>\r\n            {/* 인덱스 */}\r\n            <div className=\"win-list__idx\">\r\n              {idx + 1} <span className=\"win-list__idx__border\"></span>\r\n            </div>\r\n\r\n            {/* 숫자들 */}\r\n            <div className=\"win-list__number-container\">\r\n              <span className=\"win-number win-number--one\">{v.value[0]}</span>\r\n              <span className=\"win-number win-number--two\">{v.value[1]}</span>\r\n              <span className=\"win-number win-number--three\">{v.value[2]}</span>\r\n              <span className=\"win-number win-number--four\">{v.value[3]}</span>\r\n              <span className=\"win-number win-number--five\">{v.value[4]}</span>\r\n              <span className=\"win-number win-number--six\">{v.value[5]}</span>\r\n            </div>\r\n\r\n            {/* 새로고침 */}\r\n            <div id={v.id} onClick={handleOnclickRefresh}>\r\n              <BiRefresh size={20} />\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"submit-container\" onClick={() => navigate(-1)}>\r\n        Back\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultLotto;\r\n"],"names":["api","axios","baseURL","timeout","navigate","useNavigate","game","useAppSelector","state","playGame","include","exclude","deviation","useState","resultLotto","setResultLotto","fetchData","res","data","map","v","id","Math","random","toString","substring","value","useEffect","handleOnclickRefresh","e","currentTarget","refresh","slice","idx","findIndex","newData","splice","className","onClick","size"],"sourceRoot":""}